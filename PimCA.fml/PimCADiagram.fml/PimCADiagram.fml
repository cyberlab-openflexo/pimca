use org.openflexo.technologyadapter.diagram.TypedDiagramModelSlot;
use org.openflexo.foundation.fml.rt.FMLRTVirtualModelInstanceModelSlot;

/**
 * FML-controlled diagram representing a PimCA model
 * 
 * @version 0.1
 */
@VirtualModel(uri="http://ensta-bretagne.fr/cyber/pimca/PimCA.fml/PimCADiagram.fml")
public class PimCADiagram {

  public Diagram diagram;
  public PimCAModel model;

  @CreationScheme  
  PimCADiagram:init(String diagramName, VirtualModelInstanceType<PimCAModel> model) {  
    diagram = CreateDiagram();    
    model = parameters.model;  
  }  


  @FlexoConcept  
  public class BasicMachineryGR {  
  
    public DiagramShape shape;  
    public Machinery machinery;  
  
    @DropScheme    
    BasicMachineryGR:dropBasicMachineryGRAtTopLevel(String name, FlexoEnumType<MachineryType> kind) {    
      shape = diagram.AddShape();      
      machinery = Machinery.create(parameters.name,parameters.kind);    
    }    
  
  }  

  @FlexoConcept  
  public class PerformerGR {  
  
    public DiagramShape forme;  
    public Performer performer;  
  
    @DropScheme    
    PerformerGR:dropPerformerGRAtTopLevel(String name) {    
      forme = diagram.AddShape();      
      performer = Performer.create(parameters.name);    
    }    
  
  }  

  @FlexoConcept  
  public class NetworkGR {  
  
    public DiagramShape shape;  
    public DiagramShape icon;  
    public Network network;  
    public DiagramShape label;  
  
    @DropScheme    
    NetworkGR:dropNetworkGRAtTopLevel(String name, FlexoEnumType<NetworkType> networkType) {    
      shape = diagram.AddShape();      
      icon = diagram.AddShape();      
      label = diagram.AddShape();      
      network = Network.create(parameters.name,parameters.networkType);    
    }    
  
  }  

}
